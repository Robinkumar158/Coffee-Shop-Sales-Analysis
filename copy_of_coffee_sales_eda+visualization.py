# -*- coding: utf-8 -*-
"""Copy of Coffee Sales EDA+Visualization

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uCmb4zFVGcNlFKGt6cbKpwqUaF8GwcVb
"""

# IMPORTANT: RUN THIS CELL IN ORDER TO IMPORT YOUR KAGGLE DATA SOURCES,
# THEN FEEL FREE TO DELETE THIS CELL.
# NOTE: THIS NOTEBOOK ENVIRONMENT DIFFERS FROM KAGGLE'S PYTHON
# ENVIRONMENT SO THERE MAY BE MISSING LIBRARIES USED BY YOUR
# NOTEBOOK.
import kagglehub
ihelon_coffee_sales_path = kagglehub.dataset_download('ihelon/coffee-sales')

print('Data source import complete.')

"""![beverage-1853905_640.jpg](attachment:d32aafc3-efb3-4984-8b58-19d713987de2.jpg)

## Objective

This dataset contains detailed records of coffee sales from a vending machine. The dataset spans from March 2024 to Present time, capturing daily transaction data. In this notebook, we are going to use EDA to discover the customer's purchasing patterns and sales trends which can aid in the inventory planning.

## Import packages
"""

import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)
import matplotlib.pyplot as plt
import seaborn as sns
import datetime as dt

import warnings
warnings.filterwarnings('ignore')

import os
for dirname, _, filenames in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))

"""## Load data"""

coffee_data = pd.read_csv(os.path.join(ihelon_coffee_sales_path, 'index_1.csv'))

"""## EDA"""

coffee_data.head()

coffee_data.info()

coffee_data.isnull().sum()

coffee_data.duplicated().sum()

coffee_data.describe().T

coffee_data.loc[:,['cash_type','card','coffee_name']].describe().T

"""- There are 1033 transactions in the data.
- 89 missing values in the column 'card'.
- No duplicates.
- 2 unique values of 'cash_type'.
- 8 different coffee types with 'Americano with Milk' is the most popular product.

Let's check the transactions with missing value in 'card'.
"""

coffee_data[coffee_data['card'].isnull()]['cash_type'].value_counts()

"""All of the transactions with null 'card' information are from cash users."""

coffee_data['cash_type'].hist()

coffee_data['cash_type'].value_counts(normalize=True)

"""~92% of the transactions are from card users."""

pd.DataFrame(coffee_data['coffee_name'].value_counts(normalize=True).sort_values(ascending=False).round(4)*100)

"""Americano with Milk and Latte are our most popular coffee products. In the second tier are Cappuccino and Americano, while Cortado, Hot Chocolate, Espresso, and Cocoa are less popular.

Next, let's conduct data transformations for further analysis.
"""

#Convert date and datetime to datetme format
coffee_data['date']=pd.to_datetime(coffee_data['date'])
coffee_data['datetime']=pd.to_datetime(coffee_data['datetime'])
#Create column of Month, Weekdays, and Hours
coffee_data['month']=coffee_data['date'].dt.strftime('%Y-%m')
coffee_data['day']=coffee_data['date'].dt.strftime('%w')
coffee_data['hour']=coffee_data['datetime'].dt.strftime('%H')

coffee_data.info()

coffee_data.head()

[coffee_data['date'].min(),coffee_data['date'].max()]

"""The time range of this data set is from 2023-3-1 to 2024-7-31

Let's first check the overal revenue by products.
"""

revenue_data = coffee_data.groupby(['coffee_name']).sum(['money']).reset_index().sort_values(by='money',ascending=False)

plt.figure(figsize=(10,4))
ax = sns.barplot(data=revenue_data,x='money',y='coffee_name',color='steelblue')
ax.bar_label(ax.containers[0], fontsize=6)
plt.xlabel('Revenue')

"""Latte is the product with the highest revenue, while Expresso is the one at the bottom. Then let's check the monthly data."""

monthly_sales = coffee_data.groupby(['coffee_name','month']).count()['date'].reset_index().rename(columns={'date':'count'}).pivot(index='month',columns='coffee_name',values='count').reset_index()
monthly_sales

monthly_sales.describe().T.loc[:,['min','max']]

plt.figure(figsize=(12,6))
sns.lineplot(data=monthly_sales)
plt.legend(loc='upper left')
plt.xticks(range(len(monthly_sales['month'])),monthly_sales['month'],size='small')

"""As shown in the line chart above, Americano with Milk and Latte, and Cappuccino are top selling coffee types, while Cocoa and Expresso have lowest sales. Additionally, Americano with Milk and Latte show an upward trending."""

weekday_sales = coffee_data.groupby(['day']).count()['date'].reset_index().rename(columns={'date':'count'})
weekday_sales

plt.figure(figsize=(12,6))
sns.barplot(data=weekday_sales,x='day',y='count',color='steelblue')
plt.xticks(range(len(weekday_sales['day'])),['Sun','Mon','Tue','Wed','Thur','Fri','Sat'],size='small')

"""The bar chart reveals that Tuesday has the highest sales of the week, while sales on the other days are relatively similar."""

daily_sales = coffee_data.groupby(['coffee_name','date']).count()['datetime'].reset_index().reset_index().rename(columns={'datetime':'count'}).pivot(index='date',columns='coffee_name',values='count').reset_index().fillna(0)
daily_sales

daily_sales.iloc[:,1:].describe().T.loc[:,['min','max']]

"""This table provides us the infomation of how many of each products can be sold in each day."""

hourly_sales = coffee_data.groupby(['hour']).count()['date'].reset_index().rename(columns={'date':'count'})
hourly_sales

sns.barplot(data=hourly_sales,x='hour',y='count',color='steelblue')

"""Overall, two peak hours within each day can be observed: 10:00am and 7:00pm. Then, let's check if any difference for different products."""

hourly_sales_by_coffee = coffee_data.groupby(['hour','coffee_name']).count()['date'].reset_index().rename(columns={'date':'count'}).pivot(index='hour',columns='coffee_name',values='count').fillna(0).reset_index()
hourly_sales_by_coffee

fig, axs = plt.subplots(2, 4, figsize=(20, 10))

# Flatten the array of subplots for easy iteration
axs = axs.flatten()

# Loop through each column in the DataFrame, skipping the 'Index' column
for i, column in enumerate(hourly_sales_by_coffee.columns[1:]):  # Skip the first column ('Index')
    axs[i].bar(hourly_sales_by_coffee['hour'], hourly_sales_by_coffee[column])
    axs[i].set_title(f'{column}')
    axs[i].set_xlabel('Hour')
    #axs[i].set_ylabel('Sales')

plt.tight_layout()

# Show the plot
plt.show()

"""The plots above illustrate the shopping traffic for each product throughout the day. Notably, all products experience a peak in traffic around 10:00 AM, with this trend being particularly pronounced for Latte. Additionally, Cappuccino, Cocoa, and Hot Chocolate tend to be more popular during the evening hours, specifically between 6:00pm and 8:00pm.

## Conclusion

From the analysis above, we have uncovered valuable insights into customer shopping patterns on a daily and weekly basis. We have identified the most popular coffee products and observed the shopping trends over time. These findings are instrumental in optimizing inventory planning, designing the layout of vending machines, and determining the ideal restock times for coffee products.
"""

import os

# Assuming the data is extracted to a subdirectory within ihelon_coffee_sales_path
# Let's list the files in the downloaded directory to find the correct path
downloaded_files = os.listdir(ihelon_coffee_sales_path)
print(downloaded_files)

# If there's a subdirectory, list its contents as well
for item in downloaded_files:
    item_path = os.path.join(ihelon_coffee_sales_path, item)
    if os.path.isdir(item_path):
        print(f"Files in {item}: {os.listdir(item_path)}")